@model Petrivske.News
<script src="~/ckeditor/ckeditor.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
@{
    ViewBag.CurrentSection = "News";
    ViewBag.Title = "Редагування новини";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="big-wrapper">
    <div class="wrapper">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <section class="form">
                        <h2>Редагування новини</h2>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.id)
                            <div class="form-horizontal">

                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.dateBegin, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.dateBegin, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.dateBegin, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.dateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.dateEnd, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.dateEnd, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.title, new { @class = "form-control", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.text, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.text, new { @class = "form-control", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.text, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.minitext, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.minitext, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.minitext, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.visible, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">

                                            @Html.CheckBoxFor(model => model.visible, new { @style = "width: 36px; height:36px; margin-left: 0px" })
                                            @Html.ValidationMessageFor(model => model.visible, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Теги</label>
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            <select class="form-control js-data-example-ajax" multiple="multiple">
                                                @foreach (var i in Petrivske.Models.Tag.GetAllTags())
                                                {
                                                    if (i.News.Any(a=>a.id==Model.id))
                                                    {
                                                        <option value="@i.Id" selected="selected">@i.Keyword</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@i.Id">@i.Keyword</option>
                                                    }
                                                }
                                                @*<option selected="selected">orange</option>
                                                    <option>white</option>
                                                    <option selected="selected">purple</option>*@
                                            </select>
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Редагувати новину" class="btn btn-default" />
                                        <a href="~/News/Index" class="btn btn-default">Скасувати</a>
                                    </div>
                                </div>
                            </div>
                            foreach (var i in Petrivske.Models.Tag.GetAllTags())
                            {
                                if (i.News.Any(a => a.id == Model.id))
                                {
                                    <input name='tags' id='HiddenOption_@i.Id' value='@i.Keyword' type='hidden'>
                                }
                            }
                        }

                        <div>

                        </div>
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    //function SetList()
    //{
    //    //alert($('.js-data-example-ajax').select2('data')[0].templateResult);
    //    alert($('.js-data-example-ajax').find(':selected').html());
    //}

    $('.js-data-example-ajax').on('select2:select', function (e) {        
        var data = e.params.data.text;
        var id = e.params.data.id;
        $('form').append("<input name='tags' id='HiddenOption_"+id+"' value='" + data + "' type='hidden' >");

    });
    $('.js-data-example-ajax').on('select2:unselect', function (e) {        
        var id = e.params.data.id;
        $('#HiddenOption_' + id).remove();
    });




    $(document).ready(function () {
        $('.js-data-example-ajax').select2({
            tags: true
        });
    });
    CKEDITOR.config.protectedSource.push(/<img \/="\/" .*?>/g)
                            CKEDITOR.replace('text', {
                                uploadUrl: '../../News/UploadImage',
                                allowedContent: true,
                                removeFormatAttributes: ''
                            });
                            CKEDITOR.replace('minitext', {
                                uploadUrl: '../../News/UploadImage',
                                allowedContent: true,
                                removeFormatAttributes: ''
                            });
                         
</script>

@*@model Petrivske.News

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.CurrentSection = "News";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>News</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.dateBegin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateBegin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateBegin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.minitext, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.minitext, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.minitext, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.visible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.visible)
                    @Html.ValidationMessageFor(model => model.visible, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
